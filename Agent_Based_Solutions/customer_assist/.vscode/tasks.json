{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start redis container",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "if (!(docker ps -q -f name=my-redis)) { if (docker ps -aq -f status=exited -f name=my-redis) { docker start my-redis } else { docker run -d --name my-redis -p 6379:6379 -e REDIS_PASSWORD=redis_password redis --requirepass redis_password } }"
            ],
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Session Manager: Create python virtual environment",
            "type": "shell",
            "command": "../scripts/createEnv.ps1 -Path ./services/session_manager",
            "options": {
                "cwd": "${workspaceFolder}/src"
            }
        },
        {
            "label": "Session Manager: Setup Environment",
            "type": "shell",
            "command": [
                "./services/session_manager/.venv/Scripts/python.exe -m pip install wheel",
                "&& ./services/session_manager/.venv/Scripts/python.exe ./common/setup.py bdist_wheel",
                "&& ./services/session_manager/.venv/Scripts/python.exe -m pip install --force-reinstall ./dist/common-0.1.0-py3-none-any.whl",
                "&& ./services/session_manager/.venv/Scripts/python.exe -m pip install -r services/session_manager/requirements.txt"
                ],
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "dependsOn": [
                "Start redis container",
                "Session Manager: Create python virtual environment"
            ]
        },
        {
            "label": "Customer Assist: Create python virtual environment",
            "type": "shell",
            "command": "../scripts/createEnv.ps1 -Path ./solution_accelerators/customer_assist/orchestrator",
            "options": {
                "cwd": "${workspaceFolder}/src"
            }
        },
        {
            "label": "Customer Assist: Setup Environment",
            "type": "shell",
            "command": [
                "./solution_accelerators/customer_assist/orchestrator/.venv/Scripts/python.exe -m pip install wheel",
                "&& ./solution_accelerators/customer_assist/orchestrator/.venv/Scripts/python.exe ./common/setup.py bdist_wheel",
                "&& ./solution_accelerators/customer_assist/orchestrator/.venv/Scripts/python.exe -m pip install --force-reinstall ./dist/common-0.1.0-py3-none-any.whl",
                "&& ./solution_accelerators/customer_assist/orchestrator/.venv/Scripts/python.exe -m pip install -r solution_accelerators/customer_assist/orchestrator/requirements.txt"
                ],
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "dependsOn": [
                "Start redis container",
                "Customer Assist: Create python virtual environment"
            ]
        },
        {
            "label": "Customer Assist Evals: Create python virtual environment",
            "type": "shell",
            "command": "../scripts/createEnv.ps1 -Path ./solution_accelerators/customer_assist/evaluation",
            "options": {
                "cwd": "${workspaceFolder}/src"
            }
        },
        {
            "label": "Customer Assist Evals: Setup Environment",
            "type": "shell",
            "command": [
                "./solution_accelerators/customer_assist/evaluation/.venv/Scripts/python.exe -m pip install wheel",
                "&& ./solution_accelerators/customer_assist/evaluation/.venv/Scripts/python.exe ./common/setup.py bdist_wheel",
                "&& ./solution_accelerators/customer_assist/evaluation/.venv/Scripts/python.exe -m pip install --force-reinstall ./dist/common-0.1.0-py3-none-any.whl",
                "&& ./solution_accelerators/customer_assist/evaluation/.venv/Scripts/python.exe -m pip install -r solution_accelerators/customer_assist/evaluation/requirements.txt"
                ],
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "dependsOn": [
                "Customer Assist Evals: Create python virtual environment"
            ]
        },
        {
            "label": "Customer Assist: Build and Run in Docker",
            "type": "shell",
            "command": "../src/Run-SolutionAcceleratorInDocker.ps1",
            "args": [
                "-SolutionName", "CustomerAssist",
                "-DockerfilePaths", "services/session_manager/Dockerfile solution_accelerators/customer_assist/orchestrator/Dockerfile solution_accelerators/customer_assist/conversation_simulator/Dockerfile",
                "-ServiceNames", "session_manager customer_assist_orchestrator customer_assist_conversation_simulator",
                "-ServicePorts", "5000 5102 6001",
                "-SubscriptionId", "",
                "-TenantId", ""
            ],
            "options": {
                "cwd": "${workspaceFolder}/src"
            }
        },
        {
            "label": "Customer Assist: Build and Run Docker Images [FORCE INSTALL]",
            "type": "shell",
            "command": "../src/Run-SolutionAcceleratorInDocker.ps1",
            "args": [
                "-SolutionName", "CustomerAssist",
                "-DockerfilePaths", "services/session_manager/Dockerfile solution_accelerators/customer_assist/orchestrator/Dockerfile solution_accelerators/customer_assist/conversation_simulator/Dockerfile",
                "-ServiceNames", "session_manager customer_assist_orchestrator customer_assist_conversation_simulator",
                "-ServicePorts", "5000 5102 6001",
                "-SubscriptionId", "",
                "-TenantId", "",
                "-Recreate"
            ],
            "options": {
                "cwd": "${workspaceFolder}/src"
            }
        },
        {
            "label": "Conversation Simulator: Create python virtual environment",
            "type": "shell",
            "command": "../scripts/createEnv.ps1 -Path ./solution_accelerators/customer_assist/conversation_simulator",
            "options": {
                "cwd": "${workspaceFolder}/src"
            }
        },
        {
            "label": "Conversation Simulator: Setup Environment",
            "type": "shell",
            "command": [
                "./solution_accelerators/customer_assist/conversation_simulator/.venv/Scripts/python.exe -m pip install wheel",
                "&& ./solution_accelerators/customer_assist/conversation_simulator/.venv/Scripts/python.exe ./common/setup.py bdist_wheel",
                "&& ./solution_accelerators/customer_assist/conversation_simulator/.venv/Scripts/python.exe -m pip install --force-reinstall ./dist/common-0.1.0-py3-none-any.whl",
                "&& ./solution_accelerators/customer_assist/conversation_simulator/.venv/Scripts/python.exe -m pip install -r solution_accelerators/customer_assist/conversation_simulator/requirements.txt"
            ],
            "options": {
                "cwd": "${workspaceFolder}/src"
            },
            "dependsOn": [
                "Conversation Simulator: Create python virtual environment"
            ]
        }
    ]
}